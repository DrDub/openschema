<project name="OpenSchema" default="dist" basedir=".">
    <description>
        simple example build file
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="test" location="test"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="schema"  location="schema"/>
  <property name="external"  location="external"/>
  <property name="samples"  location="samples"/>
  <property name="test.class.name" value="edu.columbia.openschema.MyTestSuite"/>
  <property name="build.compiler" value="javac1.4"/>

  <!-- JAXB settings, override the property 'jwsdp.home' to
       to your local installation of JAXB -->
  <!-- property name="jwsdp.home" value="/usr/local/jwsdp" /-->
  <property name="jwsdp.home" value="/home/pablo/jwsdp-1.4" />
    <path id="jwsdp.classpath">
    <pathelement path="src" />
    <pathelement path="classes" />
    <fileset dir="${jwsdp.home}" includes="jaxb/lib/*.jar" />
    <fileset dir="${jwsdp.home}" includes="jwsdp-shared/lib/*.jar" />
    <fileset dir="${jwsdp.home}" includes="jaxp/lib/**/*.jar" />
  </path>
  <taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask">
    <classpath refid="jwsdp.classpath" />
  </taskdef>

  <!-- classpath -->
  <path id="classpath">
    <pathelement path="src" />
    <pathelement path="classes" />
    <fileset dir="${external}" includes="*.jar" />
  </path>

  <path id="test.classpath">
    <path refid="classpath" />
    <pathelement path="${build}" />
  </path>

  <path id="samples.classpath">
    <path refid="test.classpath" />
    <pathelement path="${samples}" />
  </path>

  <!-- init, time stamp and secure build directory -->
  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" debug="true">
      <classpath refid="classpath"/>
    </javac>
  </target>

  <target name="compile-test" depends="compile"
        description="compile the test sources " >
    <!-- Compile the java code from ${test} into ${build} -->
    <javac srcdir="${test}" destdir="${build}" debug="true">
      <classpath refid="classpath"/>
    </javac>
  </target>

  <target name="compile-samples" depends="compile"
        description="compile the test sources " >
    <!-- Compile the java code from ${samples} into ${samples} -->
    <javac srcdir="${samples}" destdir="${samples}" debug="true">
      <classpath refid="samples.classpath"/>
    </javac>
  </target>

  <target name="test" depends="compile-test">
    <junit fork="yes" haltonfailure="yes">
      <test name="${test.class.name}" />
      <formatter type="plain" usefile="false"/>
      <classpath refid="test.classpath" />
    </junit>
  </target>

  <!-- generate the distribution -->
  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/lib/OpenSchema-${DSTAMP}.jar" basedir="${build}"/>
    <jar jarfile="${dist}/lib/OpenSchema-${DSTAMP}.jar" update="yes" basedir="." includes="${external}/*.jar"/>
  </target>


  <!-- clean up the build directory -->
  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>

  <!-- generate java bindings for the XML -->
  <target name="jaxb">
    <xjc schema="${schema}/OpenSchema.xsd" target="src">
      <depends dir="${schema}" includes="*.xsd"/>
      <produces file="${src}/net/sf/openschema/OpenSchema.java"/>
    </xjc>
    <copy file="src/net/sf/openschema/jaxb.properties" todir="build/net/sf/openschema"/>
    <copy file="src/net/sf/jfuf/fd/jaxb.properties" todir="build/net/sf/jfuf/fd"/>
  </target>
</project>



