//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.3-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.07.09 at 03:49:56 EDT 
//


package net.sf.openschema.impl;

public class OpenSchemaTypeImpl implements net.sf.openschema.OpenSchemaType, com.sun.xml.bind.JAXBObject, net.sf.jfuf.fd.impl.runtime.UnmarshallableObject, net.sf.jfuf.fd.impl.runtime.XMLSerializable, net.sf.jfuf.fd.impl.runtime.ValidatableObject
{

    protected net.sf.openschema.SchemaNode _Schema;
    protected com.sun.xml.bind.util.ListImpl _Predicate;
    public final static java.lang.Class version = (net.sf.openschema.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sf.openschema.OpenSchemaType.class);
    }

    public net.sf.openschema.SchemaNode getSchema() {
        return _Schema;
    }

    public void setSchema(net.sf.openschema.SchemaNode value) {
        _Schema = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getPredicate() {
        if (_Predicate == null) {
            _Predicate = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Predicate;
    }

    public java.util.List getPredicate() {
        return _getPredicate();
    }

    public net.sf.jfuf.fd.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sf.jfuf.fd.impl.runtime.UnmarshallingContext context) {
        return new net.sf.openschema.impl.OpenSchemaTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sf.jfuf.fd.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_Predicate == null)? 0 :_Predicate.size());
        while (idx2 != len2) {
            context.startElement("http://openschema.sf.net", "Predicate");
            int idx_0 = idx2;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Predicate.get(idx_0 ++)), "Predicate");
            context.endNamespaceDecls();
            int idx_1 = idx2;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Predicate.get(idx_1 ++)), "Predicate");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Predicate.get(idx2 ++)), "Predicate");
            context.endElement();
        }
        context.startElement("http://openschema.sf.net", "Schema");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Schema), "Schema");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Schema), "Schema");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Schema), "Schema");
        context.endElement();
    }

    public void serializeAttributes(net.sf.jfuf.fd.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_Predicate == null)? 0 :_Predicate.size());
        while (idx2 != len2) {
            idx2 += 1;
        }
    }

    public void serializeURIs(net.sf.jfuf.fd.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_Predicate == null)? 0 :_Predicate.size());
        while (idx2 != len2) {
            idx2 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sf.openschema.OpenSchemaType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003s"
+"r\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.g"
+"rammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun"
+"/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000"
+"~\u0000\u0003q\u0000~\u0000\fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\bq\u0000~\u0000\fpsr\u0000 com.sun.m"
+"sv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~"
+"\u0000\u000exq\u0000~\u0000\u0003q\u0000~\u0000\fpsr\u00002com.sun.msv.grammar.Expression$AnyStringEx"
+"pression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u000b\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.grammar"
+".AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpressi"
+"on\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0019q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleN"
+"ameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnames"
+"paceURIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u0000.net.sf.openschema.OpenSchemaType.Predic"
+"ateTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0006p"
+"psq\u0000~\u0000\u0015q\u0000~\u0000\fpsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dt"
+"t\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLc"
+"om/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype."
+"xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Builtin"
+"AtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000 L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteSpacet\u0000.L"
+"com/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www"
+".w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.W"
+"hiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.dataty"
+"pe.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gramm"
+"ar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.su"
+"n.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000 L\u0000\fnamespac"
+"eURIq\u0000~\u0000 xpq\u0000~\u00001q\u0000~\u00000sq\u0000~\u0000\u001ft\u0000\u0004typet\u0000)http://www.w3.org/2001/"
+"XMLSchema-instanceq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\tPredicatet\u0000\u0018http://openschem"
+"a.sf.netq\u0000~\u0000\u001esq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\bq\u0000~\u0000\fps"
+"q\u0000~\u0000\u0015q\u0000~\u0000\fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u001cnet.sf.openschema.SchemaN"
+"odeq\u0000~\u0000#sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0015q\u0000~\u0000\fpq\u0000~\u0000)q\u0000~\u00009q\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u0006Schemaq\u0000"
+"~\u0000>sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTa"
+"blet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-c"
+"om.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005co"
+"untB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expressi"
+"onPool;xp\u0000\u0000\u0000\u000b\u0001pq\u0000~\u0000$q\u0000~\u0000Gq\u0000~\u0000\u0014q\u0000~\u0000Cq\u0000~\u0000\u0005q\u0000~\u0000\u0011q\u0000~\u0000@q\u0000~\u0000\nq\u0000~\u0000\u0013"
+"q\u0000~\u0000Bq\u0000~\u0000\u0007x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class PredicateTypeImpl implements net.sf.openschema.OpenSchemaType.PredicateType, com.sun.xml.bind.JAXBObject, net.sf.jfuf.fd.impl.runtime.UnmarshallableObject, net.sf.jfuf.fd.impl.runtime.XMLSerializable, com.sun.xml.bind.marshaller.IdentifiableObject, net.sf.jfuf.fd.impl.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _Property;
        protected com.sun.xml.bind.util.ListImpl _Variable;
        protected net.sf.openschema.OpenSchemaType.PredicateType.OutputType _Output;
        protected java.lang.String _ID;
        public final static java.lang.Class version = (net.sf.openschema.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (net.sf.openschema.OpenSchemaType.PredicateType.class);
        }

        protected com.sun.xml.bind.util.ListImpl _getProperty() {
            if (_Property == null) {
                _Property = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _Property;
        }

        public java.util.List getProperty() {
            return _getProperty();
        }

        protected com.sun.xml.bind.util.ListImpl _getVariable() {
            if (_Variable == null) {
                _Variable = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _Variable;
        }

        public java.util.List getVariable() {
            return _getVariable();
        }

        public net.sf.openschema.OpenSchemaType.PredicateType.OutputType getOutput() {
            return _Output;
        }

        public void setOutput(net.sf.openschema.OpenSchemaType.PredicateType.OutputType value) {
            _Output = value;
        }

        public java.lang.String getID() {
            return _ID;
        }

        public void setID(java.lang.String value) {
            _ID = value;
        }

        public net.sf.jfuf.fd.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sf.jfuf.fd.impl.runtime.UnmarshallingContext context) {
            return new net.sf.openschema.impl.OpenSchemaTypeImpl.PredicateTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(net.sf.jfuf.fd.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Property == null)? 0 :_Property.size());
            int idx2 = 0;
            final int len2 = ((_Variable == null)? 0 :_Variable.size());
            while (idx2 != len2) {
                context.startElement("http://openschema.sf.net", "Variable");
                int idx_0 = idx2;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Variable.get(idx_0 ++)), "Variable");
                context.endNamespaceDecls();
                int idx_1 = idx2;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Variable.get(idx_1 ++)), "Variable");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Variable.get(idx2 ++)), "Variable");
                context.endElement();
            }
            while (idx1 != len1) {
                context.startElement("http://openschema.sf.net", "Property");
                int idx_2 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Property.get(idx_2 ++)), "Property");
                context.endNamespaceDecls();
                int idx_3 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Property.get(idx_3 ++)), "Property");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Property.get(idx1 ++)), "Property");
                context.endElement();
            }
            if (_Output!= null) {
                context.startElement("http://openschema.sf.net", "Output");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Output), "Output");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Output), "Output");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Output), "Output");
                context.endElement();
            }
        }

        public void serializeAttributes(net.sf.jfuf.fd.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Property == null)? 0 :_Property.size());
            int idx2 = 0;
            final int len2 = ((_Variable == null)? 0 :_Variable.size());
            context.startAttribute("", "ID");
            try {
                context.text(context.onID(this, ((java.lang.String) _ID)), "ID");
            } catch (java.lang.Exception e) {
                net.sf.jfuf.fd.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            while (idx2 != len2) {
                idx2 += 1;
            }
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public void serializeURIs(net.sf.jfuf.fd.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Property == null)? 0 :_Property.size());
            int idx2 = 0;
            final int len2 = ((_Variable == null)? 0 :_Variable.size());
            while (idx2 != len2) {
                idx2 += 1;
            }
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public java.lang.String ____jaxb____getId() {
            return ((java.lang.String) _ID);
        }

        public java.lang.Class getPrimaryInterface() {
            return (net.sf.openschema.OpenSchemaType.PredicateType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar."
+"ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.OneOrMor"
+"eExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000ps"
+"r\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tname"
+"Classt\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gramm"
+"ar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcont"
+"entModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\nq\u0000~"
+"\u0000\u000epsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000"
+"\u0002L\u0000\tnameClassq\u0000~\u0000\u0010xq\u0000~\u0000\u0003q\u0000~\u0000\u000epsr\u00002com.sun.msv.grammar.Expres"
+"sion$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\r\u0001q\u0000~\u0000\u001asr\u0000 com"
+".sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.gram"
+"mar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression"
+"$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001bq\u0000~\u0000 sr\u0000#com.sun.msv"
+".grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang"
+"/String;L\u0000\fnamespaceURIq\u0000~\u0000\"xq\u0000~\u0000\u001dt\u0000;net.sf.openschema.OpenS"
+"chemaType.PredicateType.VariableTypet\u0000+http://java.sun.com/j"
+"axb/xjc/dummy-elementssq\u0000~\u0000\bppsq\u0000~\u0000\u0017q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.gr"
+"ammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Dataty"
+"pe;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~"
+"\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com"
+".sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.su"
+"n.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.da"
+"tatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\"L\u0000\bt"
+"ypeNameq\u0000~\u0000\"L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteS"
+"paceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNames"
+"r\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000"
+"\u0002L\u0000\tlocalNameq\u0000~\u0000\"L\u0000\fnamespaceURIq\u0000~\u0000\"xpq\u0000~\u00003q\u0000~\u00002sq\u0000~\u0000!t\u0000\u0004t"
+"ypet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000 sq\u0000~\u0000!t\u0000"
+"\bVariablet\u0000\u0018http://openschema.sf.netq\u0000~\u0000 sq\u0000~\u0000\bppsq\u0000~\u0000\nq\u0000~\u0000\u000e"
+"psq\u0000~\u0000\u000fq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\nq\u0000~\u0000\u000epsq\u0000~\u0000\u0017q\u0000~"
+"\u0000\u000epq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000;net.sf.openschema.OpenSchemaType."
+"PredicateType.PropertyTypeq\u0000~\u0000%sq\u0000~\u0000\bppsq\u0000~\u0000\u0017q\u0000~\u0000\u000epq\u0000~\u0000+q\u0000~\u0000"
+";q\u0000~\u0000 sq\u0000~\u0000!t\u0000\bPropertyq\u0000~\u0000@q\u0000~\u0000 sq\u0000~\u0000\bppsq\u0000~\u0000\u000fq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0000"
+"ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\nq\u0000~\u0000\u000epsq\u0000~\u0000\u0017q\u0000~\u0000\u000epq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq"
+"\u0000~\u0000!t\u00009net.sf.openschema.OpenSchemaType.PredicateType.Output"
+"Typeq\u0000~\u0000%sq\u0000~\u0000\bppsq\u0000~\u0000\u0017q\u0000~\u0000\u000epq\u0000~\u0000+q\u0000~\u0000;q\u0000~\u0000 sq\u0000~\u0000!t\u0000\u0006Outputq"
+"\u0000~\u0000@q\u0000~\u0000 sq\u0000~\u0000\u0017ppsq\u0000~\u0000(ppsr\u0000\u001fcom.sun.msv.datatype.xsd.IDType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.NcnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.su"
+"n.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~"
+"\u0000-q\u0000~\u00002t\u0000\u0002IDq\u0000~\u00006\u0000q\u0000~\u00008sq\u0000~\u00009q\u0000~\u0000cq\u0000~\u00002sq\u0000~\u0000!t\u0000\u0002IDt\u0000\u0000sr\u0000\"com"
+".sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom"
+"/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv"
+".grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstre"
+"amVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000"
+"\u0000\u0000\u0014\u0001pq\u0000~\u0000\u0006q\u0000~\u0000&q\u0000~\u0000Kq\u0000~\u0000Xq\u0000~\u0000\u0016q\u0000~\u0000Gq\u0000~\u0000Tq\u0000~\u0000Oq\u0000~\u0000\u0013q\u0000~\u0000Dq\u0000~\u0000Q"
+"q\u0000~\u0000\fq\u0000~\u0000Bq\u0000~\u0000\u0005q\u0000~\u0000\u0015q\u0000~\u0000Fq\u0000~\u0000Sq\u0000~\u0000\tq\u0000~\u0000Aq\u0000~\u0000\u0007x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class OutputTypeImpl implements net.sf.openschema.OpenSchemaType.PredicateType.OutputType, com.sun.xml.bind.JAXBObject, net.sf.jfuf.fd.impl.runtime.UnmarshallableObject, net.sf.jfuf.fd.impl.runtime.XMLSerializable, net.sf.jfuf.fd.impl.runtime.ValidatableObject
        {

            protected net.sf.jfuf.fd.FDType _FD;
            public final static java.lang.Class version = (net.sf.openschema.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (net.sf.openschema.OpenSchemaType.PredicateType.OutputType.class);
            }

            public net.sf.jfuf.fd.FDType getFD() {
                return _FD;
            }

            public void setFD(net.sf.jfuf.fd.FDType value) {
                _FD = value;
            }

            public net.sf.jfuf.fd.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sf.jfuf.fd.impl.runtime.UnmarshallingContext context) {
                return new net.sf.openschema.impl.OpenSchemaTypeImpl.PredicateTypeImpl.OutputTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(net.sf.jfuf.fd.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (_FD instanceof javax.xml.bind.Element) {
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _FD), "FD");
                } else {
                    context.startElement("http://jfuf.sf.net/FD", "FD");
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _FD), "FD");
                    context.endNamespaceDecls();
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _FD), "FD");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _FD), "FD");
                    context.endElement();
                }
            }

            public void serializeAttributes(net.sf.jfuf.fd.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (_FD instanceof javax.xml.bind.Element) {
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _FD), "FD");
                }
            }

            public void serializeURIs(net.sf.jfuf.fd.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (_FD instanceof javax.xml.bind.Element) {
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _FD), "FD");
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (net.sf.openschema.OpenSchemaType.PredicateType.OutputType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bex"
+"pandedExpq\u0000~\u0000\u0002xpppsr\u0000\'com.sun.msv.grammar.trex.ElementPatter"
+"n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr"
+"\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclar"
+"edAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000 com.sun"
+".msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar."
+"UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r"
+"\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsr\u00002com.sun.m"
+"sv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq"
+"\u0000~\u0000\u000e\u0001q\u0000~\u0000\u0013sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000"
+"\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.g"
+"rammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0014q\u0000~"
+"\u0000\u0019sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocal"
+"Namet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001bxq\u0000~\u0000\u0016t\u0000\u0011net.sf"
+".jfuf.fd.FDt\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000"
+"~\u0000\u0006pp\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001pp"
+"sq\u0000~\u0000\u0006pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0010q\u0000~\u0000\u000fpq\u0000~\u0000\u0013q\u0000~\u0000\u0017q\u0000~\u0000\u0019sq\u0000~"
+"\u0000\u001at\u0000\u0015net.sf.jfuf.fd.FDTypeq\u0000~\u0000\u001esq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0010q\u0000~\u0000\u000fpsr\u0000\u001bcom.s"
+"un.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/dataty"
+"pe/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/String"
+"Pair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.s"
+"un.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUri"
+"q\u0000~\u0000\u001bL\u0000\btypeNameq\u0000~\u0000\u001bL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/x"
+"sd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchema"
+"t\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Col"
+"lapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProce"
+"ssor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetE"
+"xpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0"
+"t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001bL\u0000\fnamespaceURIq\u0000~\u0000\u001bxpq\u0000~\u00005q\u0000~\u00004s"
+"q\u0000~\u0000\u001at\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000"
+"\u0019sq\u0000~\u0000\u001at\u0000\u0002FDt\u0000\u0015http://jfuf.sf.net/FDsr\u0000\"com.sun.msv.grammar."
+"ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/"
+"ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expressi"
+"onPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006paren"
+"tt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0007\u0001pq\u0000~\u0000(q\u0000~\u0000\rq\u0000"
+"~\u0000$q\u0000~\u0000!q\u0000~\u0000\nq\u0000~\u0000#q\u0000~\u0000\u0005x"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends net.sf.jfuf.fd.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(net.sf.jfuf.fd.impl.runtime.UnmarshallingContext context) {
                    super(context, "----");
                }

                protected Unmarshaller(net.sf.jfuf.fd.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return net.sf.openschema.impl.OpenSchemaTypeImpl.PredicateTypeImpl.OutputTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                if (("FD" == ___local)&&("http://jfuf.sf.net/FD" == ___uri)) {
                                    _FD = ((net.sf.jfuf.fd.impl.FDImpl) spawnChildFromEnterElement((net.sf.jfuf.fd.impl.FDImpl.class), 3, ___uri, ___local, ___qname, __atts));
                                    return ;
                                }
                                if (("FD" == ___local)&&("http://jfuf.sf.net/FD" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  3 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  1 :
                                if (("V" == ___local)&&("http://jfuf.sf.net/FD" == ___uri)) {
                                    _FD = ((net.sf.jfuf.fd.impl.FDTypeImpl) spawnChildFromEnterElement((net.sf.jfuf.fd.impl.FDTypeImpl.class), 2, ___uri, ___local, ___qname, __atts));
                                    return ;
                                }
                                _FD = ((net.sf.jfuf.fd.impl.FDTypeImpl) spawnChildFromEnterElement((net.sf.jfuf.fd.impl.FDTypeImpl.class), 2, ___uri, ___local, ___qname, __atts));
                                return ;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  1 :
                                _FD = ((net.sf.jfuf.fd.impl.FDTypeImpl) spawnChildFromLeaveElement((net.sf.jfuf.fd.impl.FDTypeImpl.class), 2, ___uri, ___local, ___qname));
                                return ;
                            case  2 :
                                if (("FD" == ___local)&&("http://jfuf.sf.net/FD" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  1 :
                                _FD = ((net.sf.jfuf.fd.impl.FDTypeImpl) spawnChildFromEnterAttribute((net.sf.jfuf.fd.impl.FDTypeImpl.class), 2, ___uri, ___local, ___qname));
                                return ;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  1 :
                                _FD = ((net.sf.jfuf.fd.impl.FDTypeImpl) spawnChildFromLeaveAttribute((net.sf.jfuf.fd.impl.FDTypeImpl.class), 2, ___uri, ___local, ___qname));
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  3 :
                                    revertToParentFromText(value);
                                    return ;
                                case  1 :
                                    _FD = ((net.sf.jfuf.fd.impl.FDTypeImpl) spawnChildFromText((net.sf.jfuf.fd.impl.FDTypeImpl.class), 2, value));
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

            }

        }

        public static class PropertyTypeImpl implements net.sf.openschema.OpenSchemaType.PredicateType.PropertyType, com.sun.xml.bind.JAXBObject, net.sf.jfuf.fd.impl.runtime.UnmarshallableObject, net.sf.jfuf.fd.impl.runtime.XMLSerializable, net.sf.jfuf.fd.impl.runtime.ValidatableObject
        {

            protected java.lang.String _Value;
            public final static java.lang.Class version = (net.sf.openschema.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (net.sf.openschema.OpenSchemaType.PredicateType.PropertyType.class);
            }

            public java.lang.String getValue() {
                return _Value;
            }

            public void setValue(java.lang.String value) {
                _Value = value;
            }

            public net.sf.jfuf.fd.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sf.jfuf.fd.impl.runtime.UnmarshallingContext context) {
                return new net.sf.openschema.impl.OpenSchemaTypeImpl.PredicateTypeImpl.PropertyTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(net.sf.jfuf.fd.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public void serializeAttributes(net.sf.jfuf.fd.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                context.startAttribute("", "Value");
                try {
                    context.text(((java.lang.String) _Value), "Value");
                } catch (java.lang.Exception e) {
                    net.sf.jfuf.fd.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }

            public void serializeURIs(net.sf.jfuf.fd.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public java.lang.Class getPrimaryInterface() {
                return (net.sf.openschema.OpenSchemaType.PredicateType.PropertyType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expt\u0000 "
+"Lcom/sun/msv/grammar/Expression;L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/"
+"grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O"
+"\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedEx"
+"pq\u0000~\u0000\u0001xpppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001f"
+"Lorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0001L\u0000\u0004namet\u0000\u001dLcom/"
+"sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.datatype.xsd"
+".StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.dataty"
+"pe.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype."
+"xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDa"
+"tatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\b"
+"typeNameq\u0000~\u0000\u000eL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/White"
+"SpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006strin"
+"gsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExpress"
+"ion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d"
+"\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u000eL\u0000\fnamespaceURIq\u0000~\u0000\u000expq\u0000~\u0000\u0012q\u0000~\u0000\u0011sr\u0000#com"
+".sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u000e"
+"L\u0000\fnamespaceURIq\u0000~\u0000\u000exr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xpt\u0000\u0005Valuet\u0000\u0000sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Clos"
+"edHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j"
+"\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/gr"
+"ammar/ExpressionPool;xp\u0000\u0000\u0000\u0000\u0001px"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends net.sf.jfuf.fd.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(net.sf.jfuf.fd.impl.runtime.UnmarshallingContext context) {
                    super(context, "----");
                }

                protected Unmarshaller(net.sf.jfuf.fd.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return net.sf.openschema.impl.OpenSchemaTypeImpl.PredicateTypeImpl.PropertyTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "Value");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Value = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "Value");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  0 :
                                if (("Value" == ___local)&&("" == ___uri)) {
                                    state = 1;
                                    return ;
                                }
                                break;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  2 :
                                if (("Value" == ___local)&&("" == ___uri)) {
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  3 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "Value");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  1 :
                                    eatText1(value);
                                    state = 2;
                                    return ;
                                case  3 :
                                    revertToParentFromText(value);
                                    return ;
                                case  0 :
                                    attIdx = context.getAttribute("", "Value");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        eatText1(v);
                                        state = 3;
                                        continue outer;
                                    }
                                    break;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

            }

        }

        public class Unmarshaller
            extends net.sf.jfuf.fd.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(net.sf.jfuf.fd.impl.runtime.UnmarshallingContext context) {
                super(context, "-------------");
            }

            protected Unmarshaller(net.sf.jfuf.fd.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return net.sf.openschema.impl.OpenSchemaTypeImpl.PredicateTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  9 :
                            if (("Property" == ___local)&&("http://openschema.sf.net" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 7;
                                return ;
                            }
                            if (("Output" == ___local)&&("http://openschema.sf.net" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 10;
                                return ;
                            }
                            state = 12;
                            continue outer;
                        case  4 :
                            attIdx = context.getAttribute("", "DefaultFocus");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "ID");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                        case  10 :
                            if (("FD" == ___local)&&("http://jfuf.sf.net/FD" == ___uri)) {
                                _Output = ((net.sf.openschema.impl.OpenSchemaTypeImpl.PredicateTypeImpl.OutputTypeImpl) spawnChildFromEnterElement((net.sf.openschema.impl.OpenSchemaTypeImpl.PredicateTypeImpl.OutputTypeImpl.class), 11, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            if (("FD" == ___local)&&("http://jfuf.sf.net/FD" == ___uri)) {
                                _Output = ((net.sf.openschema.impl.OpenSchemaTypeImpl.PredicateTypeImpl.OutputTypeImpl) spawnChildFromEnterElement((net.sf.openschema.impl.OpenSchemaTypeImpl.PredicateTypeImpl.OutputTypeImpl.class), 11, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            break;
                        case  6 :
                            if (("Variable" == ___local)&&("http://openschema.sf.net" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 4;
                                return ;
                            }
                            if (("Property" == ___local)&&("http://openschema.sf.net" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 7;
                                return ;
                            }
                            state = 9;
                            continue outer;
                        case  12 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "ID");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  3 :
                            if (("Variable" == ___local)&&("http://openschema.sf.net" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 4;
                                return ;
                            }
                            state = 6;
                            continue outer;
                        case  7 :
                            attIdx = context.getAttribute("", "Value");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _ID = context.addToIdTable(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  9 :
                            state = 12;
                            continue outer;
                        case  4 :
                            attIdx = context.getAttribute("", "DefaultFocus");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "ID");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  5 :
                            if (("Variable" == ___local)&&("http://openschema.sf.net" == ___uri)) {
                                context.popAttributes();
                                state = 6;
                                return ;
                            }
                            break;
                        case  11 :
                            if (("Output" == ___local)&&("http://openschema.sf.net" == ___uri)) {
                                context.popAttributes();
                                state = 12;
                                return ;
                            }
                            break;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  12 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  8 :
                            if (("Property" == ___local)&&("http://openschema.sf.net" == ___uri)) {
                                context.popAttributes();
                                state = 9;
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "ID");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  7 :
                            attIdx = context.getAttribute("", "Value");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  9 :
                            state = 12;
                            continue outer;
                        case  4 :
                            if (("DefaultFocus" == ___local)&&("" == ___uri)) {
                                _getVariable().add(((net.sf.openschema.impl.OpenSchemaTypeImpl.PredicateTypeImpl.VariableTypeImpl) spawnChildFromEnterAttribute((net.sf.openschema.impl.OpenSchemaTypeImpl.PredicateTypeImpl.VariableTypeImpl.class), 5, ___uri, ___local, ___qname)));
                                return ;
                            }
                            if (("ID" == ___local)&&("" == ___uri)) {
                                _getVariable().add(((net.sf.openschema.impl.OpenSchemaTypeImpl.PredicateTypeImpl.VariableTypeImpl) spawnChildFromEnterAttribute((net.sf.openschema.impl.OpenSchemaTypeImpl.PredicateTypeImpl.VariableTypeImpl.class), 5, ___uri, ___local, ___qname)));
                                return ;
                            }
                            break;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  12 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            if (("ID" == ___local)&&("" == ___uri)) {
                                state = 1;
                                return ;
                            }
                            break;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  7 :
                            if (("Value" == ___local)&&("" == ___uri)) {
                                _getProperty().add(((net.sf.openschema.impl.OpenSchemaTypeImpl.PredicateTypeImpl.PropertyTypeImpl) spawnChildFromEnterAttribute((net.sf.openschema.impl.OpenSchemaTypeImpl.PredicateTypeImpl.PropertyTypeImpl.class), 8, ___uri, ___local, ___qname)));
                                return ;
                            }
                            break;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  9 :
                            state = 12;
                            continue outer;
                        case  4 :
                            attIdx = context.getAttribute("", "DefaultFocus");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "ID");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  12 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "ID");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  2 :
                            if (("ID" == ___local)&&("" == ___uri)) {
                                state = 3;
                                return ;
                            }
                            break;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  7 :
                            attIdx = context.getAttribute("", "Value");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  9 :
                                state = 12;
                                continue outer;
                            case  4 :
                                attIdx = context.getAttribute("", "DefaultFocus");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "ID");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  12 :
                                revertToParentFromText(value);
                                return ;
                            case  1 :
                                eatText1(value);
                                state = 2;
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "ID");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  7 :
                                attIdx = context.getAttribute("", "Value");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

        public static class VariableTypeImpl implements net.sf.openschema.OpenSchemaType.PredicateType.VariableType, com.sun.xml.bind.JAXBObject, net.sf.jfuf.fd.impl.runtime.UnmarshallableObject, net.sf.jfuf.fd.impl.runtime.XMLSerializable, com.sun.xml.bind.marshaller.IdentifiableObject, net.sf.jfuf.fd.impl.runtime.ValidatableObject
        {

            protected java.lang.String _Type;
            protected boolean has_Required;
            protected boolean _Required;
            protected boolean has_DefaultFocus;
            protected boolean _DefaultFocus;
            protected java.lang.String _ID;
            public final static java.lang.Class version = (net.sf.openschema.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (net.sf.openschema.OpenSchemaType.PredicateType.VariableType.class);
            }

            public java.lang.String getType() {
                return _Type;
            }

            public void setType(java.lang.String value) {
                _Type = value;
            }

            public boolean isRequired() {
                if (!has_Required) {
                    return javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.DatatypeConverterImpl.installHook("false"));
                } else {
                    return _Required;
                }
            }

            public void setRequired(boolean value) {
                _Required = value;
                has_Required = true;
            }

            public boolean isDefaultFocus() {
                if (!has_DefaultFocus) {
                    return javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.DatatypeConverterImpl.installHook("false"));
                } else {
                    return _DefaultFocus;
                }
            }

            public void setDefaultFocus(boolean value) {
                _DefaultFocus = value;
                has_DefaultFocus = true;
            }

            public java.lang.String getID() {
                return _ID;
            }

            public void setID(java.lang.String value) {
                _ID = value;
            }

            public net.sf.jfuf.fd.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sf.jfuf.fd.impl.runtime.UnmarshallingContext context) {
                return new net.sf.openschema.impl.OpenSchemaTypeImpl.PredicateTypeImpl.VariableTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(net.sf.jfuf.fd.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public void serializeAttributes(net.sf.jfuf.fd.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (has_DefaultFocus) {
                    context.startAttribute("", "DefaultFocus");
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _DefaultFocus)), "DefaultFocus");
                    } catch (java.lang.Exception e) {
                        net.sf.jfuf.fd.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endAttribute();
                }
                context.startAttribute("", "ID");
                try {
                    context.text(context.onID(this, ((java.lang.String) _ID)), "ID");
                } catch (java.lang.Exception e) {
                    net.sf.jfuf.fd.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
                if (has_Required) {
                    context.startAttribute("", "Required");
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Required)), "Required");
                    } catch (java.lang.Exception e) {
                        net.sf.jfuf.fd.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endAttribute();
                }
                context.startAttribute("", "Type");
                try {
                    context.text(((java.lang.String) _Type), "Type");
                } catch (java.lang.Exception e) {
                    net.sf.jfuf.fd.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }

            public void serializeURIs(net.sf.jfuf.fd.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public java.lang.String ____jaxb____getId() {
                return ((java.lang.String) _ID);
            }

            public java.lang.Class getPrimaryInterface() {
                return (net.sf.openschema.OpenSchemaType.PredicateType.VariableType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar."
+"ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.Attribut"
+"eExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gramma"
+"r/NameClass;xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp"
+"\u0000psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/rel"
+"axng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/"
+"util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000$com.sun.msv.datatype.xsd.Boolean"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000"
+"\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0017L\u0000\nwhiteSp"
+"acet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 htt"
+"p://www.w3.org/2001/XMLSchemat\u0000\u0007booleansr\u00005com.sun.msv.datat"
+"ype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.m"
+"sv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun."
+"msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003pps"
+"r\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000"
+"\fnamespaceURIq\u0000~\u0000\u0017xpq\u0000~\u0000\u001bq\u0000~\u0000\u001asr\u0000#com.sun.msv.grammar.Simple"
+"NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017xr\u0000"
+"\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\fDefaultFocust\u0000"
+"\u0000sr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\r\u0001q\u0000~\u0000)sq\u0000~\u0000\nppsq\u0000~\u0000\u000fppsr\u0000\u001fcom.sun.msv.dataty"
+"pe.xsd.IDType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.NcnameT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAl"
+"waysValidxq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0002IDq\u0000~\u0000\u001e\u0000q\u0000~\u0000 sq\u0000~\u0000!q\u0000~\u00002q\u0000~\u0000\u001asq\u0000~\u0000#t\u0000"
+"\u0002IDq\u0000~\u0000\'sq\u0000~\u0000\bppsq\u0000~\u0000\nq\u0000~\u0000\u000epq\u0000~\u0000\u0012sq\u0000~\u0000#t\u0000\bRequiredq\u0000~\u0000\'q\u0000~\u0000)"
+"sq\u0000~\u0000\nppsq\u0000~\u0000\u000fppsq\u0000~\u0000/q\u0000~\u0000\u001at\u0000\u0005tokenq\u0000~\u0000\u001e\u0001q\u0000~\u0000 sq\u0000~\u0000!q\u0000~\u0000=q\u0000~"
+"\u0000\u001asq\u0000~\u0000#t\u0000\u0004Typeq\u0000~\u0000\'sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$C"
+"losedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHas"
+"h\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv"
+"/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0005\u0001pq\u0000~\u00006q\u0000~\u0000\tq\u0000~\u0000\u0006q\u0000~\u0000\u0007q\u0000~\u0000\u0005x"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends net.sf.jfuf.fd.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(net.sf.jfuf.fd.impl.runtime.UnmarshallingContext context) {
                    super(context, "-------------");
                }

                protected Unmarshaller(net.sf.jfuf.fd.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return net.sf.openschema.impl.OpenSchemaTypeImpl.PredicateTypeImpl.VariableTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                attIdx = context.getAttribute("", "ID");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 6;
                                    continue outer;
                                }
                                break;
                            case  9 :
                                attIdx = context.getAttribute("", "Type");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText2(v);
                                    state = 12;
                                    continue outer;
                                }
                                break;
                            case  12 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "DefaultFocus");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText3(v);
                                    state = 3;
                                    continue outer;
                                }
                                state = 3;
                                continue outer;
                            case  6 :
                                attIdx = context.getAttribute("", "Required");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText4(v);
                                    state = 9;
                                    continue outer;
                                }
                                state = 9;
                                continue outer;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ID = context.addToIdTable(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Type = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText3(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _DefaultFocus = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_DefaultFocus = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText4(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Required = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Required = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                attIdx = context.getAttribute("", "ID");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 6;
                                    continue outer;
                                }
                                break;
                            case  9 :
                                attIdx = context.getAttribute("", "Type");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText2(v);
                                    state = 12;
                                    continue outer;
                                }
                                break;
                            case  12 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "DefaultFocus");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText3(v);
                                    state = 3;
                                    continue outer;
                                }
                                state = 3;
                                continue outer;
                            case  6 :
                                attIdx = context.getAttribute("", "Required");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText4(v);
                                    state = 9;
                                    continue outer;
                                }
                                state = 9;
                                continue outer;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                if (("ID" == ___local)&&("" == ___uri)) {
                                    state = 4;
                                    return ;
                                }
                                break;
                            case  9 :
                                if (("Type" == ___local)&&("" == ___uri)) {
                                    state = 10;
                                    return ;
                                }
                                break;
                            case  12 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  0 :
                                if (("DefaultFocus" == ___local)&&("" == ___uri)) {
                                    state = 1;
                                    return ;
                                }
                                state = 3;
                                continue outer;
                            case  6 :
                                if (("Required" == ___local)&&("" == ___uri)) {
                                    state = 7;
                                    return ;
                                }
                                state = 9;
                                continue outer;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  8 :
                                if (("Required" == ___local)&&("" == ___uri)) {
                                    state = 9;
                                    return ;
                                }
                                break;
                            case  3 :
                                attIdx = context.getAttribute("", "ID");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 6;
                                    continue outer;
                                }
                                break;
                            case  9 :
                                attIdx = context.getAttribute("", "Type");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText2(v);
                                    state = 12;
                                    continue outer;
                                }
                                break;
                            case  2 :
                                if (("DefaultFocus" == ___local)&&("" == ___uri)) {
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  12 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  11 :
                                if (("Type" == ___local)&&("" == ___uri)) {
                                    state = 12;
                                    return ;
                                }
                                break;
                            case  0 :
                                attIdx = context.getAttribute("", "DefaultFocus");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText3(v);
                                    state = 3;
                                    continue outer;
                                }
                                state = 3;
                                continue outer;
                            case  5 :
                                if (("ID" == ___local)&&("" == ___uri)) {
                                    state = 6;
                                    return ;
                                }
                                break;
                            case  6 :
                                attIdx = context.getAttribute("", "Required");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText4(v);
                                    state = 9;
                                    continue outer;
                                }
                                state = 9;
                                continue outer;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  1 :
                                    eatText3(value);
                                    state = 2;
                                    return ;
                                case  10 :
                                    eatText2(value);
                                    state = 11;
                                    return ;
                                case  4 :
                                    eatText1(value);
                                    state = 5;
                                    return ;
                                case  3 :
                                    attIdx = context.getAttribute("", "ID");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        eatText1(v);
                                        state = 6;
                                        continue outer;
                                    }
                                    break;
                                case  7 :
                                    eatText4(value);
                                    state = 8;
                                    return ;
                                case  9 :
                                    attIdx = context.getAttribute("", "Type");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        eatText2(v);
                                        state = 12;
                                        continue outer;
                                    }
                                    break;
                                case  12 :
                                    revertToParentFromText(value);
                                    return ;
                                case  0 :
                                    attIdx = context.getAttribute("", "DefaultFocus");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        eatText3(v);
                                        state = 3;
                                        continue outer;
                                    }
                                    state = 3;
                                    continue outer;
                                case  6 :
                                    attIdx = context.getAttribute("", "Required");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        eatText4(v);
                                        state = 9;
                                        continue outer;
                                    }
                                    state = 9;
                                    continue outer;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

            }

        }

    }

    public class Unmarshaller
        extends net.sf.jfuf.fd.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sf.jfuf.fd.impl.runtime.UnmarshallingContext context) {
            super(context, "-------");
        }

        protected Unmarshaller(net.sf.jfuf.fd.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sf.openschema.impl.OpenSchemaTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        attIdx = context.getAttribute("", "ID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  6 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  4 :
                        if (("Node" == ___local)&&("http://openschema.sf.net" == ___uri)) {
                            _Schema = ((net.sf.openschema.impl.SchemaNodeImpl) spawnChildFromEnterElement((net.sf.openschema.impl.SchemaNodeImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("Predicate" == ___local)&&("http://openschema.sf.net" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        if (("Predicate" == ___local)&&("http://openschema.sf.net" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        if (("Schema" == ___local)&&("http://openschema.sf.net" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        attIdx = context.getAttribute("", "ID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  5 :
                        if (("Schema" == ___local)&&("http://openschema.sf.net" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  6 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("Predicate" == ___local)&&("http://openschema.sf.net" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  0 :
                        state = 3;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        if (("ID" == ___local)&&("" == ___uri)) {
                            _getPredicate().add(((net.sf.openschema.impl.OpenSchemaTypeImpl.PredicateTypeImpl) spawnChildFromEnterAttribute((net.sf.openschema.impl.OpenSchemaTypeImpl.PredicateTypeImpl.class), 2, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  6 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        state = 3;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        attIdx = context.getAttribute("", "ID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  6 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        state = 3;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            attIdx = context.getAttribute("", "ID");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  6 :
                            revertToParentFromText(value);
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
